name: Deploy Next.js (pnpm + Oryx) to Azure App Service - reception-house-frontend

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  APP_NAME: reception-house-frontend

jobs:
  package-source:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Verifica que el ecosystem exista en la RAÍZ del repo
      - name: Verify ecosystem.config.js
        run: |
          ls -la
          test -f ecosystem.config.js || (echo "ecosystem.config.js NOT FOUND at repo root" && exit 1)
          echo "ecosystem.config.js found ✅"

      # Empaqueta SOLO el código fuente (sin node_modules ni .next)
      - name: Zip source (root app)
        run: |
          zip -r release.zip . \
            -x "node_modules/**" ".next/**" ".git/**" ".github/**"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-zip
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: package-source
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: source-zip
          path: .

      - name: Azure Login (federated)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EA0423EEA1104702A92BD6A83761A8A0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D9A7B31FCBFD4F19B99B5DD938A09738 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E66F17BB1EF64DE1971F9FCAAD0280CF }}

      - name: Deploy to Azure Web App (ZipDeploy -> Oryx remote build)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: release.zip
